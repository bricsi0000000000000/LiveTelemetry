<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:local="clr-namespace:UI.CustomControls">

    <Style TargetType="{x:Type local:CardButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CardButton}">
                    <materialDesign:Card UniformCornerRadius="{DynamicResource CardButtonCornerRadius}"
                                         materialDesign:ShadowAssist.ShadowDepth="Depth1"
                                         Background="{TemplateBinding Background}"
                                         FontSize="{DynamicResource ButtonFontSize}"
                                         >
                        <ContentControl Content="{TemplateBinding Text}"
                                        Foreground="{DynamicResource FontColor}"
                                        Background="{TemplateBinding Background}"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        />
                    </materialDesign:Card>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonMouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonMouseLeave}"/>
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonMouseDown}"/>
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ImageCardButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageCardButton}">
                    <materialDesign:Card UniformCornerRadius="{DynamicResource CardButtonCornerRadius}"
                                         materialDesign:ShadowAssist.ShadowDepth="Depth1"
                                         Background="{TemplateBinding Background}"
                                         FontSize="{DynamicResource ButtonFontSize}"
                                         >
                        <materialDesign:PackIcon Kind="{Binding Kind, RelativeSource={RelativeSource TemplatedParent}}"
                                                 VerticalAlignment="Stretch"
                                                 HorizontalAlignment="Stretch"
                                                 />
                    </materialDesign:Card>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonMouseOver}"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonMouseLeave}"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonMouseDown}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:DeleteCardButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DeleteCardButton}">
                    <materialDesign:Card UniformCornerRadius="{DynamicResource CardButtonCornerRadius}"
                                         materialDesign:ShadowAssist.ShadowDepth="Depth1"
                                         Background="{TemplateBinding Background}"
                                         FontSize="{DynamicResource ButtonFontSize}"
                                         >
                        <materialDesign:PackIcon Kind="Delete"
                                                 Foreground="{DynamicResource Delete}"
                                                 VerticalAlignment="Stretch"
                                                 HorizontalAlignment="Stretch"
                                                 />
                    </materialDesign:Card>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentButtonMouseOver}"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="{DynamicResource AccentButtonMouseLeave}"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentButtonMouseDown}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type local:InteractiveCard}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:InteractiveCard}">
                    <materialDesign:Card UniformCornerRadius="{DynamicResource CardButtonCornerRadius}"
                                         materialDesign:ShadowAssist.ShadowDepth="Depth1"
                                         Background="{TemplateBinding Background}"
                                         FontSize="{DynamicResource ButtonFontSize}"
                                         >
                        <ContentControl Content="{TemplateBinding Text}"
                                        Background="{TemplateBinding Background}"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Left"
                                        Margin="10 0 0 0"
                                        />
                    </materialDesign:Card>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentButtonMouseOver}"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="{DynamicResource AccentButtonMouseLeave}"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentButtonMouseDown}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(local:InteractiveCard.IsSelected)}" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource SelectedBackground}"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(local:InteractiveCard.IsSelected)}" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource FontColor}"/>
                            <Setter Property="FontWeight" Value="Normal"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:AttributeCard}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:AttributeCard}">
                    <materialDesign:Card UniformCornerRadius="{DynamicResource CardButtonCornerRadius}"
                                         materialDesign:ShadowAssist.ShadowDepth="Depth1"
                                         Background="{TemplateBinding Background}"
                                         FontSize="{DynamicResource ButtonFontSize}"
                                         >
                        <Grid Margin="5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="65"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="65"/>
                            </Grid.ColumnDefinitions>

                            <materialDesign:Card Grid.Column="0"
                                                 Margin="5"
                                                 UniformCornerRadius="5"
                                                 Background="{TemplateBinding AttributeColor}"
                                                 materialDesign:ShadowAssist.ShadowDepth="Depth0"
                                                 BorderThickness="0"
                                                 />

                            <Label Grid.Column="1"
                                   Content="{TemplateBinding AttributeName}"
                                   Foreground="{TemplateBinding LabelColor}"
                                   VerticalContentAlignment="Center"
                                   HorizontalContentAlignment="Left"
                                   >
                            </Label>

                            <Label Grid.Column="2"
                                   Content="{TemplateBinding LineWidth}"
                                   Foreground="{TemplateBinding LabelColor}"
                                   VerticalContentAlignment="Center"
                                   HorizontalContentAlignment="Left"
                                   />
                        </Grid>
                    </materialDesign:Card>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentButtonMouseOver}"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="{DynamicResource AccentButtonMouseLeave}"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentButtonMouseDown}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(local:AttributeCard.IsSelected)}" Value="True">
                            <Setter Property="FontWeight" Value="Bold"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(local:AttributeCard.IsSelected)}" Value="False">
                            <Setter Property="FontWeight" Value="Normal"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:EmptyPanel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:EmptyPanel}">
                    <Grid Background="{DynamicResource MaterialDesignBackground}">
                        <materialDesign:PackIcon Kind="{Binding Kind, RelativeSource={RelativeSource TemplatedParent}}"
                                                 Foreground="{DynamicResource FontColor}"
                                                 VerticalAlignment="Stretch"
                                                 HorizontalAlignment="Stretch"
                                                 Opacity="{DynamicResource EmptyPanelOpacity}"
                                                 />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ImageCardButtonWithoutShadow}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ImageCardButtonWithoutShadow}">
                    <materialDesign:Card UniformCornerRadius="{DynamicResource CardButtonCornerRadius}"
                                         materialDesign:ShadowAssist.ShadowDepth="Depth0"
                                         Background="{TemplateBinding Background}"
                                         FontSize="{DynamicResource ButtonFontSize}"
                                         >
                        <materialDesign:PackIcon Kind="{Binding Kind, RelativeSource={RelativeSource TemplatedParent}}"
                                                 Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                                                 VerticalAlignment="Stretch"
                                                 HorizontalAlignment="Stretch"
                                                 />
                    </materialDesign:Card>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonMouseOver}"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonMouseLeave}"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonMouseDown}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:PopUpDeleteCardButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PopUpDeleteCardButton}">
                    <materialDesign:Card UniformCornerRadius="{DynamicResource CardButtonCornerRadius}"
                                         materialDesign:ShadowAssist.ShadowDepth="Depth0"
                                         Background="{TemplateBinding Background}"
                                         FontSize="{DynamicResource ButtonFontSize}"
                                         >
                        <materialDesign:PackIcon Kind="{Binding Kind, RelativeSource={RelativeSource TemplatedParent}}"
                                                 Foreground="{DynamicResource Delete}"
                                                 VerticalAlignment="Stretch"
                                                 HorizontalAlignment="Stretch"
                                                 />
                    </materialDesign:Card>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonMouseOver}"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonMouseLeave}"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter Property="Background" Value="{DynamicResource PrimaryButtonMouseDown}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:LiveSessionCard}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LiveSessionCard}">
                    <materialDesign:Card UniformCornerRadius="{DynamicResource CardButtonCornerRadius}"
                                         materialDesign:ShadowAssist.ShadowDepth="Depth1"
                                         Background="{TemplateBinding Background}"
                                         FontSize="{DynamicResource ButtonFontSize}"
                                         Margin="2.5, 1, 2.5, 4"
                                         >
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="50"/>
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <Label Grid.Row="0"
                                       FontWeight="Bold"
                                       VerticalAlignment="Stretch"
                                       HorizontalAlignment="Stretch"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Left"
                                       Margin="5,0,0,0"
                                       FontSize="16"
                                       Content="{TemplateBinding SessionName}"
                                       Foreground="{TemplateBinding Foreground}"
                                       />

                                <Label Grid.Row="1"
                                       VerticalAlignment="Stretch"
                                       HorizontalAlignment="Stretch"
                                       VerticalContentAlignment="Center"
                                       HorizontalContentAlignment="Left"
                                       Margin="5,0,0,0"
                                       Foreground="{TemplateBinding Foreground}"
                                       Content="{TemplateBinding SessionDate}"
                                       />

                            </Grid>

                            <materialDesign:Card Grid.Column="1"
                                                 Margin="2.5,5,5,5"
                                                 materialDesign:ShadowAssist.ShadowDepth="Depth0"
                                                 UniformCornerRadius="{DynamicResource CardButtonCornerRadius}"
                                                 Background="{TemplateBinding Background}"
                                                 >
                                <materialDesign:PackIcon Kind="{Binding Kind, RelativeSource={RelativeSource TemplatedParent}}"
                                                         VerticalAlignment="Stretch"
                                                         HorizontalAlignment="Stretch"
                                                         RenderTransformOrigin="0.5,0.5"
                                                         Foreground="{TemplateBinding StatusColor}"
                                                         >
                                    <materialDesign:PackIcon.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </materialDesign:PackIcon.RenderTransform>
                                </materialDesign:PackIcon>
                            </materialDesign:Card>
                        </Grid>
                    </materialDesign:Card>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentButtonMouseOver}"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter Property="Background" Value="{DynamicResource AccentButtonMouseLeave}"/>
                            <Setter Property="Cursor" Value="Arrow"/>
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentButtonMouseDown}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(local:LiveSessionCard.IsSelected)}" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource Selected}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(local:LiveSessionCard.IsSelected)}" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource NotSelected}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
