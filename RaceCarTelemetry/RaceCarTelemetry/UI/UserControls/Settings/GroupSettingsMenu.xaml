<UserControl x:Class="UI.UserControls.Settings.GroupSettingsMenu"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:validation="clr-namespace:UI.ValidationRules"
             xmlns:custom="clr-namespace:UI.CustomControls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             Background="{DynamicResource MaterialDesignBackground}"
             d:DataContext="{d:DesignInstance validation:FieldsViewModel, IsDesignTimeCreatable=False}"
             >
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="45"/>
            </Grid.RowDefinitions>

            <ScrollViewer Margin="5,5,0,5"
                          VerticalScrollBarVisibility="Auto"
                          HorizontalScrollBarVisibility="Auto"
                          >
                <StackPanel x:Name="GroupsStackPanel"
                            Margin="0,0,0,5"
                            />
            </ScrollViewer>

            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <custom:ImageCardButton Margin="5,5,2.5,5"
                                        x:Name="AddGroupCardButton"
                                        Click="AddGroupCardButton_Click"
                                        Kind="GroupAddOutline"/>

                <custom:DeleteCardButton Grid.Column="1"
                                         Margin="2.5,5,5,5"
                                         x:Name="DeleteGroupCardButton"
                                         Click="DeleteGroupCardButton_Click"
                                         />
            </Grid>
        </Grid>

        <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Background="{DynamicResource GridSplitter}"/>

        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="65"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="45"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="60"/>
                </Grid.ColumnDefinitions>

                <TextBox Name="SelectedGroupNameTextBox"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            VerticalContentAlignment="Center"
                            HorizontalContentAlignment="Left"
                            materialDesign:HintAssist.Hint="Group name"
                            materialDesign:HintAssist.IsFloating="True"
                            Margin="5,0,0,15"
                            >
                    <TextBox.Text>
                        <Binding Path="GroupName"
                                    UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <custom:ImageCardButtonWithoutShadow Grid.Column="1"
                                                     x:Name="ChangeSelectedGroupNameCardButton"
                                                     Margin="5,10"
                                                     Kind="ContentSave"
                                                     Click="ChangeSelectedGroupNameCardButton_Click"
                                                     />
            </Grid>

            <ScrollViewer Grid.Row="1" 
                          Margin="0,5,0,5"
                          VerticalScrollBarVisibility="Auto"
                          HorizontalScrollBarVisibility="Auto"
                          >
                <StackPanel x:Name="AttributesStackPanel"
                            Margin="0,0,0,5"
                            />
            </ScrollViewer>

            <Grid Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <custom:ImageCardButton Grid.Column="0"
                                        Margin="5,5,2.5,5"
                                        x:Name="AddAttributeCardButton"
                                        Click="AddAttributeCardButton_Click"
                                        Kind="PlaylistAdd"
                                        />

                <custom:DeleteCardButton Grid.Column="1"
                                         Margin="2.5,5,5,5"
                                         x:Name="DeleteAttributeCardButton"
                                         Click="DeleteAttributeCardButton_Click"
                                         />
            </Grid>
        </Grid>

        <GridSplitter Grid.Column="3" HorizontalAlignment="Stretch" Background="{DynamicResource GridSplitter}"/>

        <Grid Grid.Column="4">
            <Grid.RowDefinitions>
                <RowDefinition Height="65"/>
                <RowDefinition Height="65"/>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="60"/>
                </Grid.ColumnDefinitions>

                <TextBox Name="SelectedAttributeNameTextBox"
                         VerticalAlignment="Stretch"
                         HorizontalAlignment="Stretch"
                         VerticalContentAlignment="Center"
                         HorizontalContentAlignment="Left"
                         materialDesign:HintAssist.Hint="Channel name"
                         materialDesign:HintAssist.IsFloating="True"
                         Margin="5,0,0,15"
                         >
                    <TextBox.Text>
                        <Binding Path="AttributeName"
                                 UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <custom:ImageCardButtonWithoutShadow Grid.Column="1"
                                                     x:Name="ChangeSelectedAttributeNameCardButton"
                                                     Margin="5,10"
                                                     Kind="ContentSave"
                                                     Click="ChangeSelectedAttributeNameCardButton_Click"
                                                     />
            </Grid>

            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="60"/>
                </Grid.ColumnDefinitions>

                <TextBox Name="SelectedAttributeLineWidthTextBox"
                         VerticalAlignment="Stretch"
                         HorizontalAlignment="Stretch"
                         VerticalContentAlignment="Center"
                         HorizontalContentAlignment="Left"
                         materialDesign:HintAssist.Hint="Line width"
                         materialDesign:HintAssist.IsFloating="True"
                         Margin="5,0,0,15"
                         >
                    <TextBox.Text>
                        <Binding Path="LineWidth"
                                 UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:IsNumberValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <custom:ImageCardButtonWithoutShadow Grid.Column="1"
                                                     x:Name="ChangeSelectedAttributeLineWidthCardButton"
                                                     Margin="5,10"
                                                     Kind="ContentSave"
                                                     Click="ChangeSelectedAttributeLineWidthCardButton_Click"
                                                     />
            </Grid>

            <Grid Grid.Row="2">
                <materialDesign:ColorPicker Name="SelectedAttributeColorPicker"
                                            Margin="5"
                                            PreviewMouseLeftButtonUp="SelectedAttributeColorPicker_PreviewMouseLeftButtonUp"
                                            />
            </Grid>

            <custom:EmptyPanel x:Name="NoAttributesGrid"
                               Grid.RowSpan="5"
                               Visibility="Hidden"
                               Kind="FormatListBulleted"/>
        </Grid>

        <Grid Name="PopUpBackground"
              Grid.ColumnSpan="7"
              Background="{DynamicResource PopUpBackground}"
              Opacity="{DynamicResource PopUpBackgroundOpacity}"
              Visibility="Hidden"/>

        <Grid Name="AddGroupGrid"
              Grid.ColumnSpan="7"
              Visibility="Hidden"
              >
            <materialDesign:Card Width="200"
                                 Height="140"
                                 materialDesign:ShadowAssist.ShadowDepth="Depth5"
                                 >
                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="65"/>
                        <RowDefinition Height="45"/>
                    </Grid.RowDefinitions>

                    <TextBox Name="AddGroupNameTextBox"
                             VerticalAlignment="Stretch"
                             HorizontalAlignment="Stretch"
                             VerticalContentAlignment="Center"
                             HorizontalContentAlignment="Left"
                             materialDesign:HintAssist.Hint="Group name"
                             materialDesign:HintAssist.IsFloating="True"
                             Margin="5,0,0,15"
                             >
                        <TextBox.Text>
                            <Binding Path="AddGroupName"
                                     UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validation:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <custom:ImageCardButtonWithoutShadow Margin="5"
                                                     x:Name="AddGroupPopUpCardButton"
                                                     Kind="GroupAddOutline"
                                                     Click="AddGroupPopUpCardButton_Click"/>

                        <custom:PopUpDeleteCardButton Grid.Column="1"
                                                      Margin="5"
                                                      x:Name="CancelAddGroupCardButton"
                                                      Kind="Cancel"
                                                      Click="CancelAddGroupCardButton_Click"/>
                    </Grid>
                </Grid>
            </materialDesign:Card>
        </Grid>

        <Grid Name="AddAttributeGrid"
              Grid.ColumnSpan="7"
              Visibility="Hidden"
              >
            <materialDesign:Card Width="200"
                                 Height="185"
                                 UniformCornerRadius="5"
                                 materialDesign:ShadowAssist.ShadowDepth="Depth5"
                                 >
                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="65"/>
                        <RowDefinition Height="65"/>
                        <RowDefinition Height="45"/>
                    </Grid.RowDefinitions>

                    <TextBox Name="AddAttributeNameTextBox"
                             VerticalAlignment="Stretch"
                             HorizontalAlignment="Stretch"
                             VerticalContentAlignment="Center"
                             HorizontalContentAlignment="Left"
                             materialDesign:HintAssist.Hint="Channel name"
                             materialDesign:HintAssist.IsFloating="True"
                             Margin="5,0,0,15"
                             >
                        <TextBox.Text>
                            <Binding Path="AddAttributeName"
                                     UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validation:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <TextBox Grid.Row="1"
                             Name="AddAttributeLineWidthTextBox"
                             VerticalAlignment="Stretch"
                             HorizontalAlignment="Stretch"
                             VerticalContentAlignment="Center"
                             HorizontalContentAlignment="Left"
                             materialDesign:HintAssist.Hint="Line width"
                             materialDesign:HintAssist.IsFloating="True"
                             Margin="5,0,0,15"
                             >
                        <TextBox.Text>
                            <Binding Path="AddAttributeLineWidth"
                                     UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validation:IsNumberValidationRule ValidatesOnTargetUpdated="True"/>
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <Grid Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <custom:ImageCardButtonWithoutShadow Margin="5"
                                                             x:Name="AddAttributePopUpCardButton"
                                                             Kind="PlaylistAdd"
                                                             Click="AddAttributePopUpCardButton_Click"/>

                        <custom:PopUpDeleteCardButton Grid.Column="1"
                                                      Margin="5"
                                                      x:Name="CancelAddAttributeCardButton"
                                                      Kind="Cancel"
                                                      Click="CancelAddAttributeCardButton_Click"/>

                    </Grid>
                </Grid>
            </materialDesign:Card>
        </Grid>

        <materialDesign:Snackbar MessageQueue="{materialDesign:MessageQueue}"
                                 Grid.ColumnSpan="7"
                                 x:Name="MessageSnackbar"
                                 Foreground="White"
                                 />
    </Grid>
</UserControl>
